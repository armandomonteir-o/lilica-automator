name: Build Executables

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev xvfb xauth
          sudo touch /home/runner/.Xauthority
          sudo chmod 777 /home/runner/.Xauthority

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-xvfb

      - name: Run tests
        env:
          DISPLAY: ":99.0"
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
          pytest tests/ -v

  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/ -v

  lint:
    needs: [test-linux, test-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          # Executa flake8 ignorando alguns erros comuns e limitando a linha em 100 caracteres
          flake8 src/ --count --max-line-length=100 --ignore=E402,E501 --statistics

  build-windows:
    needs: [lint]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create Version File
        run: |
          echo ${{ github.sha }} > version.txt
          echo ${{ github.ref }} >> version.txt

      - name: Create Windows Executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --name="Automacao Ozia" src/gui/automacao_ozia_gui.py --add-data "version.txt;." --add-data "src/utils/coordenadas.json;." --collect-all customtkinter --clean --strip --noupx

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Automacao-Ozia-Windows
          path: dist/

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create Version File
        run: |
          echo ${{ github.sha }} > version.txt
          echo ${{ github.ref }} >> version.txt

      - name: Create Linux Executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --name="automacao_ozia" src/gui/automacao_ozia_gui.py --add-data "version.txt:." --add-data "src/utils/coordenadas.json:." --collect-all customtkinter --clean --strip --noupx

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Automacao-Ozia-Linux
          path: dist/

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Automacao-Ozia-Windows
          path: windows-dist

      - uses: actions/download-artifact@v4
        with:
          name: Automacao-Ozia-Linux
          path: linux-dist

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-dist/Automacao Ozia.exe
          asset_name: Automacao-Ozia-Windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-dist/automacao_ozia
          asset_name: automacao_ozia_linux
          asset_content_type: application/octet-stream
